apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "entra-phishing-detection.fullname" . }}
  labels:
    {{- include "entra-phishing-detection.labels" . | nindent 4 }}
data:
  config.json: |
    {
      "server": {
        "listen": ":8000",
        "listen_metrics": ":8001",
        "listen_pprof": ":8002",
        "graceful_timeout": {{ .Values.configFile.gracefulTimeout | toJson }},
        "secret_key_header_name": {{ .Values.configFile.secretKeyHeaderName | toJson }},
        "secret_key_header_value": {{ .Values.configFile.secretKeyHeaderValue | toJson }},
        "ip_header": {{ .Values.configFile.ipHeader | toJson }},
        "host_headers": {{ .Values.configFile.hostHeaders | toJson }},
        "path_image": {{ .Values.configFile.pathImage | toJson }},
        "path_health": {{ .Values.configFile.pathHealth | toJson }},
        "path_version": {{ .Values.configFile.pathVersion | toJson }}
      },
      "logging": {
        "access_log": true,
        "json": true,
        "log_file": "{{ .Values.logs.logfilePath }}/log.log",
        "rotate": {
          "max_size": 100,
          "max_age": 30,
          "max_backups": 2,
          "compress": false
        }
      },
      "timeout": {{ .Values.configFile.timeout | toJson }},
      "allowed_origins": {{ .Values.configFile.allowedOrigins | toJson }},
      "treat_missing_referer_as_phishing": {{ .Values.configFile.treatMissingRefererAsPhishing | toJson }}
    }
  {{- if .Values.fluentBit.enabled }}
  fluentbit.yml: |
    ---
    service:
      flush: 1
      daemon: off
      log_level: info
      hot_reload: on

    parsers:
      - name: json
        format: json
        time_key: time
        time_keep: true
        time_format: '%Y-%m-%dT%H:%M:%S.%L'

    pipeline:
      inputs:
        - name: tail
          path: {{ .Values.logs.logfilePath }}/log.log
          skip_long_lines: on
          skip_empty_lines: on
          tag: applogs

      filters:
        # parse and keep the original log in the log key (this will be sent to syslog)
        # we need the parsed json for additional filters
        - name: parser
          match: applogs
          key_name: log
          parser: json
          preserve_key: true
          reserve_data: true

        - name: modify
          match: applogs
          add: hostname {{ .Values.siem.syslogHostname }}
          add: appname entra-phishing-detection
          add: facility 16

        - name: modify
          match: applogs
          condition: Key_value_equals level "INFO"
          add: severity 6

        - name: modify
          match: applogs
          condition: Key_value_equals level "WARN"
          add: severity 4

        - name: modify
          match: applogs
          condition: Key_value_equals level "ERROR"
          add: severity 3

      outputs:
        - name: stdout
          match: applogs
          format: json

        # send the unparsed raw log to syslog
        - name: syslog
          match: applogs
          host: {{ .Values.siem.host | toYaml }}
          port: {{ .Values.siem.port | toYaml }}
          mode: {{ .Values.siem.mode | toYaml }}
          syslog_format: rfc5424
          syslog_maxsize: 4096
          syslog_severity_key: severity
          syslog_facility_key: facility
          syslog_hostname_key: hostname
          syslog_appname_key: appname
          syslog_message_key: log
  {{- end }}
